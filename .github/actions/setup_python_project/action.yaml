name: 'Setup Python Project'
description: 'Setup Python project'
runs:
  using: 'composite'
  steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Detect Python version from setup.py
      id: detect_python
      shell: bash
      run: |
        python - <<'PY' >> "$GITHUB_OUTPUT"
        import re, sys
        from pathlib import Path

        txt = Path('setup.py').read_text(encoding='utf-8')
        m = re.search(r"python_requires\s*=\s*['\"]([^'\"]+)['\"]", txt)
        if not m:
            print("Could not find python_requires in setup.py", file=sys.stderr)
            sys.exit(1)
        spec = m.group(1).strip()
        # Prefer exact pin ==X.Y, else take lower bound >=X.Y
        m2 = re.match(r"==\s*([0-9]+\.[0-9]+)", spec)
        if not m2:
            m2 = re.search(r">=\s*([0-9]+\.[0-9]+)", spec)
        if not m2:
            print(f"Unsupported python_requires format: {spec}", file=sys.stderr)
            sys.exit(1)
        version = m2.group(1)
        print(f"version={version}")
        PY

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ steps.detect_python.outputs.version }}

    - name: Upgrade pip
      run: python3 -m pip install --upgrade pip
      shell: bash

    - name: Cache Python dependencies
      uses: actions/cache@v4
      id: cache-python-dependencies
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}-${{ github.ref }}
        save-always: true

    - name: Install Python dependencies
      run: |
        python3 -m pip install -r requirements.txt
        python3 -m pip install -r requirements-dev.txt
        python3 -m pip install -r requirements-build-client.txt
      shell: bash
